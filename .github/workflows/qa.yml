name: Quality Assurance

on:
  push:
    branches:
      - 'feature/*/*'
      - 'feature/*'
      - 'bugfix/*/*'
      - 'bugfix/*'
      - 'feedback/*/*'
      - 'feedback/*'
      - 'maintenance/*/*'
      - 'maintenance/*'
      - 'dev-release-*'
      - 'development'

env:
  node_version: 16

jobs:
  npm_install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache npm downloads
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
      - uses: jgierer12/npm-auth-gpr@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          token: ${{ secrets.NPM_ACCESS_TOKEN }}
      - name: Setup NPM Registry
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm config set @wecreatesolutions:registry https://npm.pkg.github.com/
      - name: NPM install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
  linting:
    runs-on: ubuntu-latest
    needs: [ npm_install ]
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
      - name: NPM lint
        run: npm run lint
      - name: Typescript checking
        run: npm run type-check
